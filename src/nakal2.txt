#![feature(plugin)]
#![feature(proc_macro_hygiene, decl_macro)]

#[macro_use] extern crate rocket;
// #[macro_use] extern crate rocket_contrib;
#[macro_use] extern crate serde_derive;

// use rocket_contrib::{Json, Value};
use rocket_contrib::json::Json;
use rocket_contrib::json::JsonValue;
use rocket_contrib::json;

mod hero;
use hero::{Hero};

// bikin endpoind get dengan parameter name/age
#[post("/", data = "<hero>")]
fn create(hero: Json<Hero>) -> Json<Hero> {
    hero
}

// #[get("/json")]
// fn get_json() -> Json<Vec<String>> {
    
//      Json(vec![
//          "1".to_string(),
//          "2".to_string(),
//      ])

    // Json(vec![
    //     "test 123".to_string(),
    // ])

    // Json(vec![
    //     Output {
    //         target: "red".to_owned(),
    //         location: vec![
    //             (622, 1502352659111),
    //             (555, 1502352679000),
    //             (378, 1502352699000),
    //             (365, 1502352709000),
    //         ],
    //     },
    //     Output {
    //         target: "blue".to_owned(),
    //         location: vec![
    //             (622, 1502352659111),
    //             (555, 1502352679000),
    //             (378, 1502352699000),
    //             (365, 1502352709000),
    //         ],
    //     },
    // ])
// }
#[put("/<id>", data = "<hero>")]
fn update(id: i32, hero: Json<Hero>) -> Json<Hero> {
    hero
}

#[get("/")]
fn read() -> JsonValue {
    json!({
        "id": 83,
        "values": [1, 2, 3, 4]
    })
}

#[delete("/<id>")]
fn delete(id: i32) -> Json<JsonValue> {
    Json(json!({"status": "ok"}))
}

fn main() {
    rocket::ignite()
        .mount("/hero", routes![create, update, delete])
        .mount("/heroes", routes![read])
        .launch();
    // rocket::ignite()
    //     .mount("/hero", routes![create])
    //     .launch();
}